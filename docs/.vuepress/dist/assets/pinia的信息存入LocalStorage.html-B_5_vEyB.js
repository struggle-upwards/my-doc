import{_ as s,c as n,o as a,a as e}from"./app-DjAegRR8.js";const i={},p=e(`<h1 id="pinia的信息存入localstorage" tabindex="-1"><a class="header-anchor" href="#pinia的信息存入localstorage"><span>pinia的信息存入LocalStorage</span></a></h1><h3 id="安装pinia-plugin-persistedstate" tabindex="-1"><a class="header-anchor" href="#安装pinia-plugin-persistedstate"><span>安装pinia-plugin-persistedstate</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> i pinia-plugin-persistedstate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="将插件添加到-pinia-实例上" tabindex="-1"><a class="header-anchor" href="#将插件添加到-pinia-实例上"><span>将插件添加到 pinia 实例上</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> from <span class="token string">&#39;pinia&#39;</span></span>
<span class="line"><span class="token function">import</span> piniaPluginPersistedstate from <span class="token string">&#39;pinia-plugin-persistedstate&#39;</span></span>
<span class="line"></span>
<span class="line">const pinia <span class="token operator">=</span> createPinia<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">pinia.use<span class="token punctuation">(</span>piniaPluginPersistedstate<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-store-时-将-persist-选项设置为-true" tabindex="-1"><a class="header-anchor" href="#创建-store-时-将-persist-选项设置为-true"><span>创建 Store 时，将 <code>persist</code> 选项设置为 <code>true</code></span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> useStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> someState <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;你好 pinia&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span> someState <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">persist</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),t=[p];function l(c,o){return a(),n("div",null,t)}const u=s(i,[["render",l],["__file","pinia的信息存入LocalStorage.html.vue"]]),d=JSON.parse('{"path":"/note/Vue/pinia/pinia%E7%9A%84%E4%BF%A1%E6%81%AF%E5%AD%98%E5%85%A5LocalStorage.html","title":"pinia的信息存入LocalStorage","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"安装pinia-plugin-persistedstate","slug":"安装pinia-plugin-persistedstate","link":"#安装pinia-plugin-persistedstate","children":[]},{"level":3,"title":"将插件添加到 pinia 实例上","slug":"将插件添加到-pinia-实例上","link":"#将插件添加到-pinia-实例上","children":[]},{"level":3,"title":"创建 Store 时，将 persist 选项设置为 true","slug":"创建-store-时-将-persist-选项设置为-true","link":"#创建-store-时-将-persist-选项设置为-true","children":[]}],"git":{},"filePathRelative":"note/Vue/pinia/pinia的信息存入LocalStorage.md"}');export{u as comp,d as data};
