import{_ as o,c as e,o as l,a as c}from"./app-DjAegRR8.js";const i={},d=c('<p><code>docker-compose</code>是一个用于定义和运行多容器Docker应用程序的工具。通过一个<code>docker-compose.yml</code>文件，你可以配置你的应用服务，然后使用<code>docker-compose</code>命令来创建和启动所有服务。以下是一些常用的<code>docker-compose</code>命令：</p><h3 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令"><span>基本命令</span></a></h3><ul><li><p><strong><code>docker-compose up</code></strong></p></li><li><ul><li>启动和运行整个应用。默认情况下，<code>docker-compose up</code>会尝试自动构建任何尚未构建的镜像。如果你想强制它重新构建镜像，可以使用<code>--build</code>选项。</li></ul></li><li><p><strong><code>docker-compose down</code></strong></p></li><li><ul><li>停止并删除容器、网络、卷和镜像创建的<code>docker-compose up</code>。</li></ul></li></ul><h3 id="构建和镜像管理" tabindex="-1"><a class="header-anchor" href="#构建和镜像管理"><span>构建和镜像管理</span></a></h3><ul><li><p><strong><code>docker-compose build</code></strong></p></li><li><ul><li>构建或重新构建服务中定义的镜像。</li></ul></li><li><p><strong><code>docker-compose push</code></strong></p></li><li><ul><li>将服务镜像推送到Docker Hub或其他镜像仓库。</li></ul></li><li><p><strong><code>docker-compose pull</code></strong></p></li><li><ul><li>拉取服务依赖的镜像。</li></ul></li></ul><h3 id="服务管理" tabindex="-1"><a class="header-anchor" href="#服务管理"><span>服务管理</span></a></h3><ul><li><p><strong><code>docker-compose start</code></strong></p></li><li><ul><li>启动已经存在的服务容器。</li></ul></li><li><p><strong><code>docker-compose stop</code></strong></p></li><li><ul><li>停止正在运行的容器而不删除它们。与<code>docker-compose down</code>不同，不会删除容器和网络。</li></ul></li><li><p><strong><code>docker-compose restart</code></strong></p></li><li><ul><li>重启服务。</li></ul></li><li><p><strong><code>docker-compose pause</code></strong></p></li><li><ul><li>暂停服务中的容器。</li></ul></li><li><p><strong><code>docker-compose unpause</code></strong></p></li><li><ul><li>恢复服务中已暂停的容器。</li></ul></li></ul><h3 id="查看服务状态和日志" tabindex="-1"><a class="header-anchor" href="#查看服务状态和日志"><span>查看服务状态和日志</span></a></h3><ul><li><p><strong><code>docker-compose ps</code></strong></p></li><li><ul><li>列出项目中当前的容器。</li></ul></li><li><p><strong><code>docker-compose logs</code></strong></p></li><li><ul><li>查看服务的日志输出。可以指定服务名称来查看特定服务的日志。</li></ul></li></ul><h3 id="运行一次性命令" tabindex="-1"><a class="header-anchor" href="#运行一次性命令"><span>运行一次性命令</span></a></h3><ul><li><p><strong><code>docker-compose run</code></strong></p></li><li><ul><li>在一个新容器中运行一个一次性命令。例如，<code>docker-compose run app bash</code>会在<code>app</code>服务的容器中启动一个新的<code>bash</code>会话。</li></ul></li><li><p><strong><code>docker-compose exec</code></strong></p></li><li><ul><li>在运行中的容器上执行命令。与<code>run</code>不同，<code>exec</code>会在<strong>已经存在且正在运行</strong>的容器中执行命令。</li></ul></li></ul><h3 id="其他命令" tabindex="-1"><a class="header-anchor" href="#其他命令"><span>其他命令</span></a></h3><ul><li><p><strong><code>docker-compose config</code></strong></p></li><li><ul><li>验证并查看配置。这个命令可以用来检查配置文件的语法是否正确。</li></ul></li><li><p><strong><code>docker-compose version</code></strong></p></li><li><ul><li>显示Docker Compose的版本信息。</li></ul></li></ul>',13),s=[d];function r(n,p){return l(),e("div",null,s)}const a=o(i,[["render",r],["__file","docker-compose命令.html.vue"]]),u=JSON.parse('{"path":"/note/Docker/docker-compose%E5%91%BD%E4%BB%A4.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"基本命令","slug":"基本命令","link":"#基本命令","children":[]},{"level":3,"title":"构建和镜像管理","slug":"构建和镜像管理","link":"#构建和镜像管理","children":[]},{"level":3,"title":"服务管理","slug":"服务管理","link":"#服务管理","children":[]},{"level":3,"title":"查看服务状态和日志","slug":"查看服务状态和日志","link":"#查看服务状态和日志","children":[]},{"level":3,"title":"运行一次性命令","slug":"运行一次性命令","link":"#运行一次性命令","children":[]},{"level":3,"title":"其他命令","slug":"其他命令","link":"#其他命令","children":[]}],"git":{},"filePathRelative":"note/Docker/docker-compose命令.md"}');export{a as comp,u as data};
