import{_ as a,c as l,o as e,a as i}from"./app-DwZAwhNE.js";const n={},h=i('<h1 id="操作系统" tabindex="-1"><a class="header-anchor" href="#操作系统"><span>操作系统</span></a></h1><h2 id="操作系统的定义" tabindex="-1"><a class="header-anchor" href="#操作系统的定义"><span>操作系统的定义</span></a></h2><blockquote><p>操作系统是计算机系统的一个系统软件，他统一管理计算机的软硬件资源和控制程序的执行</p></blockquote><h2 id="操作系统的分类" tabindex="-1"><a class="header-anchor" href="#操作系统的分类"><span>操作系统的分类</span></a></h2><blockquote><p>手工操作阶段，早期批处理系统，执行系统，多道批处理系统，分时系统，实时系统，通用操作系统，微机操作系统</p></blockquote><h3 id="作业-程序-数据-作业体-作业说明书-用户想要系统怎么处理程序数据" tabindex="-1"><a class="header-anchor" href="#作业-程序-数据-作业体-作业说明书-用户想要系统怎么处理程序数据"><span>作业 = 程序 + 数据（作业体）+作业说明书（用户想要系统怎么处理程序数据）</span></a></h3><h3 id="调度是操作系统或其他系统软件决定将计算机资源分配给哪些任务或进程的过程" tabindex="-1"><a class="header-anchor" href="#调度是操作系统或其他系统软件决定将计算机资源分配给哪些任务或进程的过程"><span>调度是操作系统或其他系统软件决定将计算机资源分配给哪些任务或进程的过程</span></a></h3><h6 id="手工操作阶段" tabindex="-1"><a class="header-anchor" href="#手工操作阶段"><span>手工操作阶段</span></a></h6><p>数据程序交互依赖于人工换卡，人工装卡片，读取数据，计算机做运算</p><h6 id="早期批处理系统-单道批处理系统" tabindex="-1"><a class="header-anchor" href="#早期批处理系统-单道批处理系统"><span>早期批处理系统（<strong>单道批处理系统</strong>）</span></a></h6><p>用户对操作员提供数据，程序，作业说明书，操作员把用户数据（一堆卡片） ===&gt; 从人工换卡一张变成了一堆</p><p>装到输入设备，传上磁带。</p><p>若监督程序发现当前作业（一张卡片）符合系统运行要求，把控制权交给作业，编译运行，</p><p>否则跳过不执行</p><p>直至作业执行完毕</p><p>（系统利用率不高，在cpu计算时候，需要数据，要等待IO读写完成，cpu才能继续计算，利用率不高）</p><h6 id="多道批处理系统" tabindex="-1"><a class="header-anchor" href="#多道批处理系统"><span>多道批处理系统</span></a></h6><p>可以支持多道程序执行，即同时运行多个程序，通过合理的调度算法来共享系统资源，提高系统的利用率和吞吐量</p><ol><li><strong>提高资源利用率</strong>：多道批处理系统可以同时处理多个作业，使得系统资源得到更充分的利用。当一个作业在等待I/O操作时，CPU可以被分配给另一个正在运行的作业，从而减少了资源空闲时间。</li><li><strong>减少用户等待时间</strong>：多道批处理系统可以按照一定的调度算法同时运行多个作业，因此用户不需要等待一个作业执行完毕才能提交下一个作业，从而减少了用户的等待时间。</li><li><strong>提高系统吞吐量</strong>：由于多道批处理系统能够并行执行多个作业，因此系统的吞吐量（即单位时间内完成的作业数量）相对较高，能够更有效地处理大量作业。</li></ol><h6 id="分时系统" tabindex="-1"><a class="header-anchor" href="#分时系统"><span>分时系统</span></a></h6><p>分时系统将处理器时间切片，这是其核心实现原理之一。在分时系统中，处理器会周期性地轮流分配给各个用户或进程，每个用户或进程都被分配一小段时间（即时间片）来执行其任务。这种时间分配是周期性的，因此每个用户或进程都会在一定时间内获得处理器的执行时间。</p><h6 id="实时系统" tabindex="-1"><a class="header-anchor" href="#实时系统"><span>实时系统</span></a></h6><p>实时系统是一类针对时间敏感性应用设计的操作系统。它们的主要特点是对任务的响应时间有着严格的要求，必须在特定的时间范围内完成任务的处理。实时系统通常被用于需要及时响应的应用领域，如航空航天、工业控制、医疗设备等。</p><h6 id="微机操作系统" tabindex="-1"><a class="header-anchor" href="#微机操作系统"><span>微机操作系统</span></a></h6><p>个人机器，如笔记本电脑，32位，64位，有单用户多任务操作系统和多用户多任务操作系统（多个用户访问同一台主机，如UNIX操作系统）</p><h6 id="网络操作系统" tabindex="-1"><a class="header-anchor" href="#网络操作系统"><span>网络操作系统</span></a></h6><p>网络操作系统是一种专门设计用于网络环境下的操作系统，它提供了一系列功能和服务，以支持网络通信、数据传输和资源共享等。网络操作系统通常被用于服务器、路由器、交换机等网络设备上，以及用于构建分布式系统和云计算环境中。既可以让本地用户访问也能够让远程用户访问</p><h6 id="分布式操作系统" tabindex="-1"><a class="header-anchor" href="#分布式操作系统"><span>分布式操作系统</span></a></h6><p>分布式操作系统是一种运行在多台计算机上、通过网络协作工作的操作系统。它的设计目标是允许多个计算机节点（通常是服务器或节点）协同工作，共同提供服务和处理任务，以实现高性能、高可用性和可伸缩性。</p><h6 id="嵌入式操作系统" tabindex="-1"><a class="header-anchor" href="#嵌入式操作系统"><span>嵌入式操作系统</span></a></h6><p>嵌入式操作系统是专门设计用于嵌入式系统的操作系统，它通常运行在资源有限的嵌入式设备上，如微控制器、传感器、智能家居设备、工业控制系统等。嵌入式操作系统的设计目标是提供轻量级、高效率的操作系统内核，以满足嵌入式设备的特定需求。</p><h2 id="操作系统的功能" tabindex="-1"><a class="header-anchor" href="#操作系统的功能"><span>操作系统的功能</span></a></h2><h4 id="处理器管理" tabindex="-1"><a class="header-anchor" href="#处理器管理"><span>处理器管理</span></a></h4><p>对处理器的管理归结为对线程，进程的管理和调度</p><blockquote><ul><li>进程控制和管理</li><li>进程同步和互斥</li><li>进程通信</li><li>进程死锁</li><li>线程控制和管理</li><li>处理器调度</li></ul></blockquote><h4 id="作业管理" tabindex="-1"><a class="header-anchor" href="#作业管理"><span>作业管理</span></a></h4><p>操作系统对作业的控制和调度</p><blockquote><ul><li>作业输入</li><li>作业控制</li><li>作业调度</li></ul></blockquote><h4 id="存储管理" tabindex="-1"><a class="header-anchor" href="#存储管理"><span>存储管理</span></a></h4><p>内存的垃圾回收机制，提高存储利用率</p><blockquote><ul><li>主存分配与回收</li><li>地址转换和存储保护</li><li>主存的共享与保护</li><li>主存扩充</li></ul></blockquote><h4 id="设备管理" tabindex="-1"><a class="header-anchor" href="#设备管理"><span>设备管理</span></a></h4><p>提高cpu和IO读写利用率</p><blockquote><ul><li>提供设备控制处理</li><li>提供缓冲区处理</li><li>实现设备独立性</li><li>实现设备的分配与回收</li><li>实现共享设备的驱动调度</li><li>实现虚拟设备</li></ul></blockquote><h4 id="文件管理" tabindex="-1"><a class="header-anchor" href="#文件管理"><span>文件管理</span></a></h4><p>存储文件，保证文件安全</p><blockquote><ul><li>提供文件的逻辑组织方法</li><li>提供文件的物理组织方法</li><li>提供文件的存储的使用方法</li><li>提供文件的目录管理</li><li>实现文件的共享与保护</li><li>实现文件的存储空间管理</li></ul></blockquote><h2 id="操作系统的特征" tabindex="-1"><a class="header-anchor" href="#操作系统的特征"><span>操作系统的特征</span></a></h2><blockquote><ul><li>并发</li><li>并行</li><li>共享</li><li>异步性</li></ul></blockquote><h2 id="操作系统的作用" tabindex="-1"><a class="header-anchor" href="#操作系统的作用"><span>操作系统的作用</span></a></h2><blockquote><p>用户层面：用户与计算机硬件系统的接口</p><p>资源管理层面：计算机系统资源的管理者</p></blockquote>',51),s=[h];function p(r,t){return e(),l("div",null,s)}const o=a(n,[["render",p],["__file","操作系统的定义.html.vue"]]),d=JSON.parse('{"path":"/note/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9A%E4%B9%89.html","title":"操作系统","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"操作系统的定义","slug":"操作系统的定义","link":"#操作系统的定义","children":[]},{"level":2,"title":"操作系统的分类","slug":"操作系统的分类","link":"#操作系统的分类","children":[{"level":3,"title":"作业 = 程序 + 数据（作业体）+作业说明书（用户想要系统怎么处理程序数据）","slug":"作业-程序-数据-作业体-作业说明书-用户想要系统怎么处理程序数据","link":"#作业-程序-数据-作业体-作业说明书-用户想要系统怎么处理程序数据","children":[]},{"level":3,"title":"调度是操作系统或其他系统软件决定将计算机资源分配给哪些任务或进程的过程","slug":"调度是操作系统或其他系统软件决定将计算机资源分配给哪些任务或进程的过程","link":"#调度是操作系统或其他系统软件决定将计算机资源分配给哪些任务或进程的过程","children":[]}]},{"level":2,"title":"操作系统的功能","slug":"操作系统的功能","link":"#操作系统的功能","children":[]},{"level":2,"title":"操作系统的特征","slug":"操作系统的特征","link":"#操作系统的特征","children":[]},{"level":2,"title":"操作系统的作用","slug":"操作系统的作用","link":"#操作系统的作用","children":[]}],"git":{"updatedTime":1716996408000,"contributors":[{"name":"struggle-upwards","email":"20222131019@m.scnu.edu.cn","commits":1}]},"filePathRelative":"note/操作系统/操作系统的定义.md"}');export{o as comp,d as data};
