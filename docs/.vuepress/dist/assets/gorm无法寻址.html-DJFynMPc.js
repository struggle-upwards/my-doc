import{_ as n,c as s,o as a,a as e}from"./app-DjAegRR8.js";const p={},t=e(`<h1 id="gorm无法寻址" tabindex="-1"><a class="header-anchor" href="#gorm无法寻址"><span>gorm无法寻址</span></a></h1><p>这个错误是因为你在使用GORM时尝试将一个不可寻址（unaddressable）的值设置为整数。在Go语言中，<code>Value.SetInt</code>需要能够修改其底层的值，这意味着它需要一个可寻址的值（即一个指针）。当你直接操作非指针类型的结构体字段或者未赋值的变量时，就会出现这种错误。</p><p>例如，如果你有一个这样的定义：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    ID <span class="token builtin">int</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你这样使用GORM：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">var</span> user User</span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// 正确的方式</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>而不是：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">user <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// 错误的方式，因为user不是指针</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>要解决这个问题，你需要确保在调用<code>Model</code>方法时传入的是指向你的结构体实例的指针：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">var</span> user User</span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者，如果你是从查询结果中获取的用户，也需要确保返回的是指针：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">var</span> user <span class="token operator">*</span>User</span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[t];function c(l,i){return a(),s("div",null,o)}const d=n(p,[["render",c],["__file","gorm无法寻址.html.vue"]]),r=JSON.parse('{"path":"/note/Go/bug/gorm%E6%97%A0%E6%B3%95%E5%AF%BB%E5%9D%80.html","title":"gorm无法寻址","lang":"zh-CN","frontmatter":{},"headers":[],"git":{},"filePathRelative":"note/Go/bug/gorm无法寻址.md"}');export{d as comp,r as data};
