import{_ as n,c as s,o as a,a as p}from"./app-DjAegRR8.js";const t={},e=p(`<h1 id="gorm的关联" tabindex="-1"><a class="header-anchor" href="#gorm的关联"><span>gorm的关联</span></a></h1><h2 id="预加载" tabindex="-1"><a class="header-anchor" href="#预加载"><span>预加载</span></a></h2><p>GORM 允许在 <code>Preload</code> 的其它 SQL 中直接加载关系，例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">  gorm<span class="token punctuation">.</span>Model</span>
<span class="line">  Username <span class="token builtin">string</span></span>
<span class="line">  Orders   <span class="token punctuation">[</span><span class="token punctuation">]</span>Order</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> Order <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">  gorm<span class="token punctuation">.</span>Model</span>
<span class="line">  UserID <span class="token builtin">uint</span></span>
<span class="line">  Price  <span class="token builtin">float64</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 查找 user 时预加载相关 Order</span></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// SELECT * FROM users;</span></span>
<span class="line"><span class="token comment">// SELECT * FROM orders WHERE user_id IN (1,2,3,4);</span></span>
<span class="line"></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Profile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Role&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// SELECT * FROM users;</span></span>
<span class="line"><span class="token comment">// SELECT * FROM orders WHERE user_id IN (1,2,3,4); // has many</span></span>
<span class="line"><span class="token comment">// SELECT * FROM profiles WHERE user_id IN (1,2,3,4); // has one</span></span>
<span class="line"><span class="token comment">// SELECT * FROM roles WHERE id IN (4,5,6); // belongs to</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="joins-预加载" tabindex="-1"><a class="header-anchor" href="#joins-预加载"><span>Joins 预加载</span></a></h2><p><code>Preload</code> 在一个单独查询中加载关联数据。而 <code>Join Preload</code> 会使用 inner join 加载关联数据，例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">db<span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Company&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Account&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Company&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Account&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token string">&quot;users.name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Company&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Manager&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;Account&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">,</span> <span class="token string">&quot;users.id IN ?&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong> <code>Join Preload</code> 适用于一对一的关系，例如： <code>has one</code>, <code>belongs to</code></p></blockquote><h2 id="预加载全部" tabindex="-1"><a class="header-anchor" href="#预加载全部"><span>预加载全部</span></a></h2><p>与创建、更新时使用 <code>Select</code> 类似，<code>clause.Associations</code> 也可以和 <code>Preload</code> 一起使用，它可以用来 <code>预加载</code> 全部关联，例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">  gorm<span class="token punctuation">.</span>Model</span>
<span class="line">  Name       <span class="token builtin">string</span></span>
<span class="line">  CompanyID  <span class="token builtin">uint</span></span>
<span class="line">  Company    Company</span>
<span class="line">  Role       Role</span>
<span class="line">  Orders     <span class="token punctuation">[</span><span class="token punctuation">]</span>Order</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span>clause<span class="token punctuation">.</span>Associations<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>clause.Associations</code> 不会预加载嵌套的关联，但你可以使用<a href="https://gorm.io/zh_CN/docs/preload.html#nested_preloading" target="_blank" rel="noopener noreferrer">嵌套预加载</a> 例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders.OrderItems.Product&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span>clause<span class="token punctuation">.</span>Associations<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="带条件的预加载" tabindex="-1"><a class="header-anchor" href="#带条件的预加载"><span>带条件的预加载</span></a></h2><p>GORM 允许带条件的 Preload 关联，类似于<a href="https://gorm.io/zh_CN/docs/query.html#inline_conditions" target="_blank" rel="noopener noreferrer">内联条件</a></p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line"><span class="token comment">// 带条件的预加载 Order</span></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;state NOT IN (?)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// SELECT * FROM users;</span></span>
<span class="line"><span class="token comment">// SELECT * FROM orders WHERE user_id IN (1,2,3,4) AND state NOT IN (&#39;cancelled&#39;);</span></span>
<span class="line"></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;state = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;active&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;state NOT IN (?)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// SELECT * FROM users WHERE state = &#39;active&#39;;</span></span>
<span class="line"><span class="token comment">// SELECT * FROM orders WHERE user_id IN (1,2) AND state NOT IN (&#39;cancelled&#39;);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义预加载-sql" tabindex="-1"><a class="header-anchor" href="#自定义预加载-sql"><span>自定义预加载 SQL</span></a></h2><p>您可以通过 <code>func(db *gorm.DB) *gorm.DB</code> 实现自定义预加载 SQL，例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;orders.amount DESC&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// SELECT * FROM users;</span></span>
<span class="line"><span class="token comment">// SELECT * FROM orders WHERE user_id IN (1,2,3,4) order by orders.amount DESC;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="嵌套预加载" tabindex="-1"><a class="header-anchor" href="#嵌套预加载"><span>嵌套预加载</span></a></h2><p>GORM 支持嵌套预加载，例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders.OrderItems.Product&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;CreditCard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 自定义预加载 \`Orders\` 的条件</span></span>
<span class="line"><span class="token comment">// 这样，GORM 就不会加载不匹配的 order 记录</span></span>
<span class="line">db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;state = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;paid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Orders.OrderItems&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","gorm的关联.html.vue"]]),d=JSON.parse('{"path":"/note/Go/gorm/gorm%E7%9A%84%E5%85%B3%E8%81%94.html","title":"gorm的关联","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"预加载","slug":"预加载","link":"#预加载","children":[]},{"level":2,"title":"Joins 预加载","slug":"joins-预加载","link":"#joins-预加载","children":[]},{"level":2,"title":"预加载全部","slug":"预加载全部","link":"#预加载全部","children":[]},{"level":2,"title":"带条件的预加载","slug":"带条件的预加载","link":"#带条件的预加载","children":[]},{"level":2,"title":"自定义预加载 SQL","slug":"自定义预加载-sql","link":"#自定义预加载-sql","children":[]},{"level":2,"title":"嵌套预加载","slug":"嵌套预加载","link":"#嵌套预加载","children":[]}],"git":{},"filePathRelative":"note/Go/gorm/gorm的关联.md"}');export{r as comp,d as data};
