import{_ as s,c as a,o as n,a as e}from"./app-DwZAwhNE.js";const p={},t=e(`<h1 id="export-和-export-default的区别" tabindex="-1"><a class="header-anchor" href="#export-和-export-default的区别"><span>export 和 export default的区别</span></a></h1><h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span>一、概述</span></a></h2><blockquote><p>在 ES6 之前，社区制定了一些模块加载方案，最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，成为浏览器和服务器通用的模块解决方案。</p></blockquote><p>ES6中，在JavaScript ES6中，export与export default均可用于导出常量、函数、文件、模块等。</p><h2 id="二、export命令" tabindex="-1"><a class="header-anchor" href="#二、export命令"><span>二、export命令</span></a></h2><p>模块功能主要由两个命令构成：<code>export</code>和<code>import</code>。export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。</p><p>一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。如果你希望外部能够读取模块内部的某个变量，就必须使用export关键字输出该变量。</p><p>下面是一个js文件，里面使用export命令来输出变量，函数或类（class）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;export的内容&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span>  <span class="token keyword">var</span> year <span class="token operator">=</span><span class="token number">2019</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token parameter">sth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> sth<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了上述的写法，还有一种推荐使用的，因为这样就可以在脚本尾部，一眼看清楚输出了哪些变量。</p><div class="language-ini line-numbers-mode" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="line"><span class="token key attr-name">var str</span> <span class="token punctuation">=</span> <span class="token value attr-value">&quot;export的内容&quot;;</span></span>
<span class="line"><span class="token key attr-name">var year</span> <span class="token punctuation">=</span><span class="token value attr-value">2019;</span></span>
<span class="line">function message(sth) {</span>
<span class="line">  return sth;</span>
<span class="line">}</span>
<span class="line">export {str,year,message}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常情况下，export输出的变量就是本来的名字，但是可以使用as关键字重命名。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;export的内容&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> year <span class="token operator">=</span><span class="token number">2019</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token parameter">sth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> sth<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token punctuation">{</span></span>
<span class="line">    str <span class="token keyword">as</span> newname1<span class="token punctuation">,</span></span>
<span class="line">    year <span class="token keyword">as</span> newname2<span class="token punctuation">,</span></span>
<span class="line">    message <span class="token keyword">as</span> newname3</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码使用as关键字，重命名了变量str和year，以及函数message的对外接口。</p><h2 id="三、import命令" tabindex="-1"><a class="header-anchor" href="#三、import命令"><span>三、import命令</span></a></h2><p>使用export命令定义了模块的对外接口以后，其他 JS 文件就可以通过import命令加载这个模块。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> str<span class="token punctuation">,</span>year<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./a&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//也可以分开写两次，导入的时候带花括号，将每个变量函数名写清楚</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码的import命令，用于加载a.js文件,引入后便可以在b.js文件中使用a.js文件中的变量、函数或类等。import命令接受一对大括号，里面指定要从其他模块导入的变量名。大括号里面的变量名，必须与被导入模块（a.js）对外接口的名称相同。</p><p>如果想为输入的变量重新取一个名字，import命令要使用as关键字，将输入的变量重命名。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> str <span class="token keyword">as</span> newname1<span class="token punctuation">,</span></span>
<span class="line">year <span class="token keyword">as</span> newname2<span class="token punctuation">,</span></span>
<span class="line">message <span class="token keyword">as</span> newname3</span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./a&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>import后面的from指定模块文件的位置，可以是相对路径，也可以是绝对路径，.js后缀可以省略。 如果只是模块名，不带有路径，那么必须有配置文件，告诉 JavaScript 引擎该模块的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> axios from ‘axios’<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//import 引入一个自己写的js文件，是需要相对路径的。</span></span>
<span class="line"><span class="token keyword">import</span> AppService from ‘<span class="token punctuation">.</span><span class="token operator">/</span>appService’<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、export-default-命令" tabindex="-1"><a class="header-anchor" href="#四、export-default-命令"><span>四、export default 命令</span></a></h2><p>export default命令用于指定模块的<code>默认输出</code>。显然，一个模块只能有一个默认输出，因此export default命令只能使用一次。所以，import命令后面才不用加大括号，因为只可能唯一对应export default命令。<code>一个文件内不能有多个export default</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;export default的内容&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> str</span>
<span class="line">在另一个文件中的导入方式： </span>
<span class="line"><span class="token comment">//b.js </span></span>
<span class="line"><span class="token keyword">import</span> StrFile <span class="token keyword">from</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token comment">//导入的时候没有花括号</span></span>
<span class="line"><span class="token comment">//本质上，a.js文件的export default输出一个叫做default的变量，然后系统允许你引入的时候为它取任意名字。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、简述区别" tabindex="-1"><a class="header-anchor" href="#五、简述区别"><span>五、简述区别</span></a></h2><ol><li>export与export default均可用于导出常量、函数、文件、模块等</li><li>在一个文件或模块中，export、import可以有多个，export default仅有一个</li><li>通过export方式导出，在导入时要加{ }，export default则不需要，并可以起任意名称</li><li>输出单个值，使用export default,输出多个值，使用exportexport default与普通的export不要同时使用</li></ol>`,27),l=[t];function i(o,c){return n(),a("div",null,l)}const d=s(p,[["render",i],["__file","export和export_default的区别.html.vue"]]),u=JSON.parse('{"path":"/note/Vue/js/export%E5%92%8Cexport_default%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"export 和 export default的区别","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":2,"title":"二、export命令","slug":"二、export命令","link":"#二、export命令","children":[]},{"level":2,"title":"三、import命令","slug":"三、import命令","link":"#三、import命令","children":[]},{"level":2,"title":"四、export default 命令","slug":"四、export-default-命令","link":"#四、export-default-命令","children":[]},{"level":2,"title":"五、简述区别","slug":"五、简述区别","link":"#五、简述区别","children":[]}],"git":{"updatedTime":1716996408000,"contributors":[{"name":"struggle-upwards","email":"20222131019@m.scnu.edu.cn","commits":1}]},"filePathRelative":"note/Vue/js/export和export_default的区别.md"}');export{d as comp,u as data};
